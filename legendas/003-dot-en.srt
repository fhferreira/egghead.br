1
00:00:00,000 --> 00:00:03,000
Let's take a step back and talk about this dot right

2
00:00:03,000 --> 00:00:06,000
there, and talk about why it's so important.

3
00:00:06,000 --> 00:00:10,000
So let's add another input, and we'll just put it right

4
00:00:10,000 --> 00:00:14,000
here so it's more in the root scope with an ng-model of

5
00:00:14,000 --> 00:00:16,000
data.message.

6
00:00:16,000 --> 00:00:21,000
And then, display the message, so data.message.

7
00:00:21,000 --> 00:00:27,000
Then let's copy this and paste this in the first controller,

8
00:00:27,000 --> 00:00:32,000
and duplicate that and create a second controller.

9
00:00:32,000 --> 00:00:35,000


10
00:00:35,000 --> 00:00:40,000
So we're also going to need a-- we'll delete that, and

11
00:00:40,000 --> 00:00:41,000
create a second controller here.

12
00:00:41,000 --> 00:00:44,000


13
00:00:44,000 --> 00:00:52,000
So we're all set up to have root, first, second.

14
00:00:52,000 --> 00:00:56,000
You can see as I go through these it still updates as I

15
00:00:56,000 --> 00:00:59,000
switch between the different inputs.

16
00:00:59,000 --> 00:01:03,000
Now, if you don't include the dot in there, if you don't

17
00:01:03,000 --> 00:01:07,000
create a data object and put the message property on that

18
00:01:07,000 --> 00:01:10,000
object, let's see what happens.

19
00:01:10,000 --> 00:01:12,000
So we'll just replace everything data.message with

20
00:01:12,000 --> 00:01:14,000
just message.

21
00:01:14,000 --> 00:01:16,000
And you'll see a lot of examples like this.

22
00:01:16,000 --> 00:01:23,000
So now, if I refresh, you'll see root, first, second.

23
00:01:23,000 --> 00:01:26,000
So you can see that the behavior

24
00:01:26,000 --> 00:01:28,000
has completely changed.

25
00:01:28,000 --> 00:01:36,000
So this doesn't update the first

26
00:01:36,000 --> 00:01:40,000
controller nor the second.

27
00:01:40,000 --> 00:01:43,000
So basically, what's happened is you've overwritten this

28
00:01:43,000 --> 00:01:47,000
message property in the new scopes of first controller and

29
00:01:47,000 --> 00:01:50,000
second controller, so they're no longer communicating with

30
00:01:50,000 --> 00:01:51,000
each other.

31
00:01:51,000 --> 00:01:54,000
And you've kind of destroyed that scope inheritance that

32
00:01:54,000 --> 00:01:56,000
existed before.

33
00:01:56,000 --> 00:02:01,000
So if you want to keep that intact, and this can also come

34
00:02:01,000 --> 00:02:04,000
into play when your injecting properties and services and

35
00:02:04,000 --> 00:02:07,000
stuff that you want to bind to, if you want to keep that

36
00:02:07,000 --> 00:02:09,000
intact, always make sure you're creating

37
00:02:09,000 --> 00:02:12,000
a model like that.

38
00:02:12,000 --> 00:02:20,000
Like this data.message, that's just our model that will bind

39
00:02:20,000 --> 00:02:23,000
everywhere.

40
00:02:23,000 --> 00:02:27,000
So that that data model isn't being overwritten, it's just

41
00:02:27,000 --> 00:02:30,000
this message on the model that's being overwritten.

42
00:02:30,000 --> 00:02:34,000
You have to remember that this scope right here,

43
00:02:34,000 --> 00:02:36,000
that is not a model.

44
00:02:36,000 --> 00:02:39,000
It's just kind of a reference to what's going

45
00:02:39,000 --> 00:02:41,000
on inside of this.

46
00:02:41,000 --> 00:02:45,000
So don't ever think of it as the model to

47
00:02:45,000 --> 00:02:46,000
put properties on.

48
00:02:46,000 --> 00:02:49,000
Think of it as a model to assign the--

49
00:02:49,000 --> 00:02:53,000
sorry, think of it as a scope to assign models to and have

50
00:02:53,000 --> 00:02:56,000
the properties on those models change, and that scope can

51
00:02:56,000 --> 00:02:58,000
watch for changes and things of that nature.

52
00:02:58,000 --> 00:03:00,000
So that's why that dot is so important.

